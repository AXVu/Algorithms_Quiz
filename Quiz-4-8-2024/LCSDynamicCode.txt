public static List<Integer> longestCommonSubsequence(List<Integer> a, List<Integer> b) {
        int[][] ans = new int[a.size()+1][b.size()+1];
        
        for (int i = 0; i < a.size()+1; i++) {
            for (int j = 0; j < b.size()+1; j++) {
                if (i != 0 && j != 0) {
                    if (a.get(i - 1).equals(b.get(j - 1)))
                        ans[i][j] = ans[i - 1][j - 1] + 1;
                    else
                        ans[i][j] = Math.max(ans[i - 1][j], ans[i][j - 1]);
                }
            }
        }
        
        List<Integer> actual = new ArrayList<>();
        int i = a.size();
        int j = b.size();
        while (j > 0 && i > 0) {
            if (a.get(i - 1).equals(b.get(j - 1))) {
                actual.add(0,a.get(i-1));
                i--;
                j--;
            } else if (ans[i - 1][j] > ans[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }
        
        return actual;
    }